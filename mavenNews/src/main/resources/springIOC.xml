<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--开始注解扫描-->
    <context:component-scan base-package="com.zl"></context:component-scan>
    <!--引入jdbc.properties文件-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
    <!--配置连接池连接数据库-->
    <bean id="dataScore" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.name}"></property>
        <property name="password" value="${jdbc.pwd}"></property>
    </bean>
    <!--使用SQLSessionFactory对象生成SQLSession-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--把连接池对象传入进来-->
        <property name="dataSource" ref="dataScore"></property>
        <!--加载mybatis主配置文件-->
        <property name="configLocation" value="classpath:SqlMapConfig.xml"></property>
    </bean>
    <!--配置自动生成接口实现类的对象，并且注册到IOC容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--把SQLSessionFactory对象传入过来-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!--指定dao层所在位置-->
        <property name="basePackage" value="com.zl.dao"></property>
    </bean>
    <!--启动服务器(Tomcat)之后，服务器会自动创建(需要我们写配置文件之后会自动创建)IOC容器
    在IOC容器创建之后首先会执行此文件，执行注解扫描后得知需要创建dao层的实现类，此时会
    执行最后一个bean标签，内容是生成dao层实现类的对象，并且注册到IOC容器中，此时需要用
    到SQLSession对象就会执行上一个bean，用SQLSessionFactory生成SQLSession，在生成SQLSession
    对象时需要配置对应的配置文件，所以需要加载mybatis的主配置文件，从而知道生成哪个dao层
    对应的配置文件，而生成SQLSession之前需要连接数据库，为了优化性能我们需要创建连接池，
    所以需要把连接池对象传入SQLSession-->
</beans>